# |<----  Using a Maximum Of 50 Characters  ---->|

# Explain why this change is being made
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|


# Provide links or keys to any relevant tickets, articles or other resources
# Example: [#123123] https://link.to/issue

# --- COMMIT END ---
# Start subject with
#   Add       # Create a capability e.g. feature, test, dependency.
#   Cut       # Remove a capability e.g. feature, test, dependency.
#   Fix       # Fix an issue e.g. bug, typo, accident, misstatement.
#   Bump      # Increase the version of something e.g. dependency.
#   Make      # Change the build process, or tooling, or infra.
#   Start     # Begin doing something; e.g. create a feature flag.
#   Stop      # End doing something; e.g. remove a feature flag.
#   Refactor  # A code change that MUST be just a refactoring.
#   Reformat  # Refactor of formatting, e.g. omit whitespace.
#   Optimize  # Refactor of performance, e.g. speed up code.
#   Document  # Refactor of documentation, e.g. help files.
# --------------------
# Answer
#   Why is this change necessary?
#   How does it address the issue?
#   What side effects does this change have?
# --------------------
# Remember to
#   Capitalize the subject line
#   Use the imperative mood in the subject line
#   Do not end the subject line with a period
#   Separate subject from body with a blank line
#   Can use multiple lines with "-" for bullet points in body
#   Use a hanging indent after a bullet point
# --------------------
# More reading: https://github.com/joelparkerhenderson/git_commit_message
